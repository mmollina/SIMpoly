// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// simulate_selfing_multi_rcpp
List simulate_selfing_multi_rcpp(int n_mrk, double map_len, int n_ind, int F_generations);
RcppExport SEXP _SIMpoly_simulate_selfing_multi_rcpp(SEXP n_mrkSEXP, SEXP map_lenSEXP, SEXP n_indSEXP, SEXP F_generationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_mrk(n_mrkSEXP);
    Rcpp::traits::input_parameter< double >::type map_len(map_lenSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    Rcpp::traits::input_parameter< int >::type F_generations(F_generationsSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_selfing_multi_rcpp(n_mrk, map_len, n_ind, F_generations));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SIMpoly_simulate_selfing_multi_rcpp", (DL_FUNC) &_SIMpoly_simulate_selfing_multi_rcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_SIMpoly(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
